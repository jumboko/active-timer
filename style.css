/* ----------------------------
  HTML背景設定
----------------------------- */
html{
  font-size: 16px;                /* ルートの基準サイズを明示（1rem = 16px） */
  background-color: #fdfaf6;    /* 背景色 */
  padding: 0 1em 2em 1em;         /* 内側の余白：(上 | 右 | 下 | 左) */

/* 開発用 */
/*  border: 2px dashed #333;    /* 枠線を点線で表示（エリアの境界を視覚化） */
/*  height: 1000px;             /* 高さ指定 */
}


/* ----------------------------
  共通設定（背景・フォント・中央寄せ）
----------------------------- */
body {
  font-family: "Hiragino Maru Gothic ProN", sans-serif; /* 丸みのあるフォントで親しみやすさ */
  margin: 0 auto;          /* 外側の余白 body自体をhtmlの中央揃え */
  padding: 0 1em 2em 1em;  /* 内側の余白 */
  background: #fffab5;   /* やさしいベージュ系背景 */
  color: #333;           /* 文字の色を黒 */
  max-width: 900px;        /* 横幅を制限して中央寄せ、PCで見やすく */

/* 開発用 */
/*  border: 2px dashed #333;    /* 枠線を点線で表示（エリアの境界を視覚化） */
/*  height: 1000px;             /* 高さ指定 */
}

/* ----------------------------
  ページ表示制御
----------------------------- */
/* デフォルトで全てのページを非表示に */
.page {
  display: none;
}

/* JavaScriptでactiveクラスが付いたページだけ表示 */
.page.active {
  display: block;
}

/* ----------------------------
  固定ヘッダー（タイトル・ログインUI）
----------------------------- */
#mainHeader {
  background: #fcefdc;  /* 視認性ある背景色 */
  padding: 1em;           /* 内側の余白 */
  border-bottom: 2px solid #e0c9a6;/* ヘッダー下部に線追加 */
  position: sticky;       /* スクロールしても画面上部に固定*/
  top: 0;                 /* position: stickyに掛かり固定位置を最上部に指定 */
  z-index: 1000;          /* positionに掛かり数字が大きいほど前面に表示 念のため？そんなことしなくても全面表示かも */
}

#headerInner {
  display: flex;                    /* 横並びにする（Flexbox） */
  justify-content: space-between;   /* 左右に広げて配置する */
  align-items: flex-start;          /* 垂直方向上部で揃える */
  gap: 0.5em;                       /* 要素間にスペース */

/* 開発用 */
/*  border: 2px dashed #333;    /* 枠線を点線で表示（エリアの境界を視覚化） */ 
}

/* タイトル部分（今後ロゴ画像に差し替え可） */
#mainHeader #logoArea {
  font-size: 2em;         /* 文字サイズ */
  font-weight: bold;      /* 文字を太字 */
  margin-top: 0.1em;      /* 外側下部の余白 */
  margin-bottom: 0.4em;   /* 外側下部の余白 */

  /* タイトル折り返し対応 */
  display: inline-flex;   
  flex-wrap: wrap;        /* 折り返しを許可 */
  justify-content: center;/* 中央に配置 */
  align-items: flex-end;  /* 垂直方向下部で揃える */

/* 開発用 */
/*  border: 2px dashed #333;    /* 枠線を点線で表示（エリアの境界を視覚化） */
}

/* ログイン／ログアウトボタンを右上に配置 */
#authStatus {
  display: flex;          /* 横並びにする（Flexbox） */
  flex-direction: column; /* フレックス化したアイテムを縦並びにする */
  max-width: 130px;       /* 折り返しの上限を画面幅に応じて変える */

/* 開発用 */
/*  border: 2px dashed red;    /* 枠線を点線で表示（エリアの境界を視覚化） */
}

/* ログイン・ログアウトボタンの設定 */
.btn-auth {
  margin-bottom: 0.1em;    /* 外側下部の余白 */
  padding: 0.3em 0.6em;    /* 内側の余白を上書き(元の値の半分) */
  align-self: flex-start;  /* 子要素を垂直方向の上寄せ  これがないとボタン横伸び*/
  white-space: nowrap;     /* 折り返さない */
}

/* メールアドレスなどユーザー情報はタイトル下に */
#userInfo {
  font-size: 0.75em;   /* 文字サイズ */
  color: #555;       /* 文字色グレー */
  margin-left: 0.6em;  /* 外側左部の余白 */
  max-width: 100%;     /* 親の最大幅に依存 */
  position: relative;  /* tooltipの基準位置を指定 */

/* 開発用 */
/*  border: 2px dashed green;    /* 枠線を点線で表示（エリアの境界を視覚化） */
}

/* メールアドレス設定 */
.emailText {
  display: inline-block;     /* inline-block要素扱い */
  overflow: hidden;          /* はみ出た分は非表示 */
  text-overflow: ellipsis;   /* はみ出た場合は末尾を…に */
  white-space: nowrap;       /* 折り返さない */
  max-width: 100%;           /* 親の最大幅に依存 */

/* 開発用 */
/*  border: 2px dashed red;    /* 枠線を点線で表示（エリアの境界を視覚化） */
}

/* カスタムツールチップ */
.tooltip {
  position: absolute;     /* 基準値から自由に配置(userInfoに基準設定) */
  top: 100%;              /* 要素の下側に */
  right: 0;               /* 右端を合わせ画面内に収まるように */
  background: #333;     /* 背景色 */
  color: #fff;          /* 文字色 */
  padding: 0.4em 0.6em;   /* 内側の余白 */
  border-radius: 5px;     /* 角を丸くする */
  font-size: 1em;         /* 文字サイズ */
  white-space: normal;    /* 折り返さない */
  box-shadow: 1px 1px 6px rgba(0, 0, 0, 0.3);   /* 影を付ける */

  /* ▼ 最初は見えない状態 */
  opacity: 0;                    /* 不透明度 ※ホバーまで非表示 */
  pointer-events: none;          /* 不透明の時はホバーしても反応しないように */
  transition: opacity 0.3s ease; /* マウスホバー時の動作反映速度指定 ease=適度な加減速 */
  z-index: 9999;                 /* 前面に表示 */
}

/* userInfoホバー時にtooltip表示 */
#userInfo:hover .tooltip {
  opacity: 0.9;             /* 不透明度 */
  pointer-events: auto;     /* 表示後はマウス操作を許可 */
}

/* ----------------------------
  ボタンの共通デザイン（全体に優しい見た目）
----------------------------- */
button {
  font-size: 1.2em;            /* 文字サイズ */
  margin: 0.5em 0.2em;         /* 外側の余白 */
  padding: 0.6em 1.2em;        /* 内側の余白 */
  border: none;                /* 枠線非表示 */
  border-radius: 12px;         /* 角を丸くする */
  background: #f9c74f;       /* 背景色 */
  color: #333;               /* 文字色 */
  cursor: pointer;             /* カーソルをポインタに */
  transition: background 0.3s; /* マウスホバー時の動作反映速度指定 */
}

/* ホバー時の色指定 */
button:hover {
  background: #f8961e; /* 背景色 */
}

/* ----------------------------
  テキストボックスの共通デザイン（全体に優しい見た目）
----------------------------- */
input[type="text"], select {
  font-size: 1.1em;           /* 文字サイズ */
  margin: 0.5em 0.2em;        /* 外側の余白 */
  padding: 0.5em;             /* 内側の余白 */
  border: 1px solid #ccc;   /* 枠線の書式設定(大きさ、タイプ、色)*/
  border-radius: 10px;        /* 角を丸くする */
  background-color: #fff;   /* 背景色 */
  box-shadow: 1px 1px 3px rgba(0,0,0,0.05); /* ほんのり影で立体感 */
}

/* 並び順のプルダウンを囲むラベル設定 */
#recordOrderLabel {
  margin-left: 0.5em; /* 並び順の前に余白を追加 */
}

/* ================================
   タイマー画面のレイアウト全体
   PCでは横並び、スマホでは縦に並べる
================================ */
#timerLayout {
  display: flex;                   /* 横並びにする（スマホでは後で縦並びに変更） */
  gap: 1em;                        /* タイマーと上位記録の間にスペースを空ける */
  align-items: flex-start;         /* 上揃えにする（高さが違っても揃う） */
  justify-content: space-between;  /* 両端に均等配置(下位にflex: 1があるため本来は不要) */
  margin-top: 1em;                 /* 上に少し余白 */
  flex-wrap: wrap;                 /* 画面幅が狭いとき折り返し可 */

/* 開発用 */
/*  border: 2px dashed #333;         /* 枠線を点線で表示（エリアの境界を視覚化） */
}

/* 左右エリア */
.timerColumn,
.rankColumn {
  flex: 1;                       /* 余白に対し横幅を均等にとる */
  display: flex;                 /* 横並びにする（Flexbox） */
  flex-direction: column;        /* フレックス化したtitle,timeDisplay,ボタンを縦並びにする */
  gap: 1em;                      /* アイテムの間隔を空ける */
  min-width: 380px;              /* 最低幅を確保 */

/* 開発用 */
/*  border: 2px dashed red;       /* 枠線を点線で表示（エリアの境界を視覚化） */
}

/*  タイトル（タイマー／上位記録）  */
#timerTitle,
.rankColumn h3 {
  margin: 0;    /* 外側の余白 */

/* 開発用 */
/*  border: 2px dashed green;    /* 枠線を点線で表示（エリアの境界を視覚化） */ 
}

/* タイマーの表示部分（枠で囲って見やすく） */
#timeDisplay {
  font-size: 2.5em;              /* 文字サイズ */
  text-align: center;            /* 水平方向の中央揃え */
  margin: 0.2em 0;               /* 外側上下に余白 */
  padding: 1em;                  /* 内側の余白 */
  background: #fff3c4;         /* 文字サイズ */
  border: 2px dashed #f4a261;  /* 枠線を点線で表示（エリアの境界を視覚化） */
  border-radius: 12px;           /* 角を丸くする */
  box-shadow: 2px 2px 6px rgba(0,0,0,0.1); /* ほんのり影で立体感 */
}

/* タイマー操作ボタン全体のコンテナ */
#timerControls {
  display: flex;                  /* 横並びに配置 */
  justify-content: space-between; /* 左右に分けて配置（リセットボタンを右端に配置） */
  align-items: center;            /* 垂直方向の中央揃え */
  flex-wrap: wrap;                /* 画面幅が狭いとき折り返し可（ボタンが折り返す前に上位記録が縦になるため本来は起こりえない） */
  margin: 1em 0;                  /* 上下に余白 */

/* 開発用 */
/*  border: 2px dashed red;       /* 枠線を点線で表示（エリアの境界を視覚化） */
}

/* 左側グループ（スタート／ストップ／再開） → 全く同じ位置で切り替え表示される */
.control-left {
  display: flex;            /* ボタンを横並び */
  align-items: center;      /* 垂直方向の中央揃え */
  gap: 0.5em;               /* ボタン間に少し余白 */
}

/* 共通：タイマーボタン全体 */
.btn-timer {
  height: 2.65em;          /* 高さだけ統一 */
}

/* スタート／ストップ／再開専用：横幅を固定 */
.btn-timer.main {
  width: 6.4em;           /* これで切り替えボタンの横幅統一 */
}

/* 登録ボタン：少しだけ左のボタンから間を空ける */
.btn-timer.save {
  margin-left: 0.2em;     /* スタートとの間に空白を入れて誤タップ防止 */
}

/* 上位記録のリスト */
#topTimesList {
  margin: 0em;            /* 高さ統一のため外側の余白を削除 */
}

/* 画面移動のボタン全体のコンテナ */
#timerBackControls {
  margin: 0.7em 0;        /* 外側上下に余白(タイマーのボタンと揃うよう調整) */
}

/* ----------------------------
  活動一覧等のリスト表示
----------------------------- */
ul {
  list-style: none; /* リストの先頭の点（●）を非表示 */
  padding: 0;       /* 内側の余白0 */
}

/* 各項目のボックス化 */
li {
  margin: 0.5em 0;           /* 外側の余白 */
  padding: 0.6em;            /* 内側の余白 */
  background: #ffffff;     /* 背景色 */
  border: 1px solid #ddd;  /* 枠線の書式設定(大きさ、タイプ、色)*/
  border-radius: 10px;       /* 角を丸くする */
}

/* 活動名リスト行 */
.activityName {
  cursor: pointer;            /* カーソルをポインタに */
  text-decoration: underline; /* 下線追加 */
  color: #333;              /* 文字色 */
  flex: 1;         /* 残りのスペースで横に広がる (活動記録選択画面で削除ボタンの位置を統一するため)*/
}
.activityName:hover {
  color: #e76f51;                /* 文字色 */
  text-shadow: 1px 1px 2px #ddd; /* ほんのり影で立体感 */
}

/* 記録リスト行 */
.recordText {
  flex: 1;  /* 残りのスペースで横に広がる (活動毎の記録一覧で削除ボタンの位置を統一するため)*/
}

/* 活動毎の記録一覧画面の記録リスト行 */
#recordList .recordText {
  cursor: pointer;            /* カーソルをポインタに */
  text-decoration: underline; /* 下線追加 */
  color: #333;              /* 文字色 */
}
#recordList .recordText:hover {
  color: #e76f51;                /* 文字色 */
  text-shadow: 1px 1px 2px #ddd; /* ほんのり影で立体感 */
}

/* 順位表示 */
.rank {
  font-weight: bold;
  color: #f9844a;
  padding: 0 0.8em 0 0.6em;       /* 内側の余白：(上 | 右 | 下 | 左)  */

/* 開発用 */
/*  border: 2px dashed green;    /* 枠線を点線で表示（エリアの境界を視覚化） */
}

/* ----------------------------
  削除ボタンの整列用：横並び＆縦中央揃え
----------------------------- */
#actHistoryList li,
#recordList li {
  display: flex;          /* 横に並べる(配置自由化) */
  align-items: center;    /* 垂直方向に中央揃え */
}

.btn-del {
  margin: 0em;             /* 外側の余白を上書き */
  padding: 0.3em 1.2em;    /* 内側の余白を上書き */
  vertical-align: top;     /* 行内での垂直方向の位置調整 */
}

/* ----------------------------
  記録詳細画面の表示
----------------------------- */
#recordDetailPage p,
#recordDetailPage label {
  font-size: 1.2em;   /* 文字サイズ */
  margin: 0;          /* 外側の余白 */
  padding: 0.5em;     /* 内側の余白 */

/* 開発用 */
/*  border: 2px dashed green;    /* 枠線を点線で表示（エリアの境界を視覚化） */
}

#recordDetailPage label {
  display: block;     /* ラベルが重ならないように */
  padding-bottom: 0;  /* 内側下部の余白(下部はテキストエリアに近づけるため0) */
}

/* 順位と記録を横並びにするコンテナ */
.rank-time-row {
  display: flex;         /* 横並びにする（Flexbox） */
  margin: 0;             /* 外側の余白 */
  padding: 0;            /* 内側の余白 */
  gap: 2em;              /* 順位と記録の間のスペース */
  flex-wrap: wrap;       /* 狭い画面では折り返し可 */
  align-items: baseline; /* テキストの下揃えで自然に見える */

/* 開発用 */
/*  border: 2px dashed red;       /* 枠線を点線で表示（エリアの境界を視覚化） */ 
}

/* メモのテキストエリア */
#detailMemo {
  font-size: 1.1em;           /* 文字サイズ */
  margin: 0.5em 0.2em;        /* 外側の余白 */
  padding: 0.5em;             /* 内側の余白 */
  width: 100%;                /* 横幅 */
  box-sizing: border-box;     /* padding + borderを含めたwidthに */
  border: 1px solid #ccc;   /* 枠線の書式設定(大きさ、タイプ、色)*/
  border-radius: 10px;        /* 角を丸くする */
  background-color: #fff;   /* 背景色 */
  box-shadow: 1px 1px 3px rgba(0,0,0,0.05); /* ほんのり影で立体感 */
}

#detailMemo[readonly] {
  background-color: #f0f0f0;   /* 背景色グレーアウト */
  color: #555;                 /* 文字色グレー */
  border: 1px solid #ccc;      /* 枠線 */
  cursor: not-allowed;           /* カーソルを編集不可に */
}

/* メモのボタンエリア */
#memoControls {
  display: flex;                  /* 横並びに配置 */
  justify-content: space-between; /* 左右に分けて配置（リセットボタンを右端に配置） */
  align-items: center;            /* 垂直方向の中央揃え */
  flex-wrap: wrap;                /* 画面幅が狭いとき折り返し可 */
  margin: 1em 0;                  /* 上下に余白 */

/* 開発用 */
/*  border: 2px dashed red;       /* 枠線を点線で表示（エリアの境界を視覚化） */
}

/* 右側グループ（メモ編集／キャンセル／メモ保存） */
#memoRightButton {
  display: flex;              /* 横並びに配置 */
  justify-content: flex-end;  /* ボタン右寄せ */
  gap: 0.5em;                 /* ボタン間に少し余白 */
}

/* ----------------------------
  ホームページの設定
----------------------------- */
#homePage {
  margin-top: 2em;      /* 外側上部の余白 */
  text-align: center;   /* 子要素（h1, buttonなど）を中央揃え */
}

/* バックアップ・インポートエリアの配置 */
#backupArea {
  padding-top: 2em;        /* 内側上部の余白 */
  display: flex;           /* 横並びにする（Flexbox）  */
  flex-direction: column;  /* フレックス化したアイテムを縦並びにする */
  gap: 0.5em;              /* ボタンの間にスペース */
  align-items: center;     /* display: flexで横に伸びるアイテムを自然なサイズに */
}

/* ----------------------------
  ポップアップ時のオーバーレイ
----------------------------- */
#overlay {
  display: block;      /* 最初は表示しておく（UID付与後JSで非表示にする） */
  position: fixed;     /* 位置を固定 */
  top: 0;              /* 全画面配置 */
  left: 0;             /* 全画面配置 */
  right: 0;            /* 全画面配置 */
  bottom: 0;           /* 全画面配置 */
  background: rgba(0, 0, 0, 0.3);    /* 背景色 */
  z-index: 99999;      /* 前面に表示 */
  cursor: wait;        /* カーソルをwaitに変更 */
}

/* ----------------------------
  モーダル画面
----------------------------- */
.modal {
  display: none;       /* 画面非表示 */
  position: fixed;     /* 位置を固定 */
  z-index: 99999;      /* 前面に表示 */
  left: 0;             /* 全画面配置 */
  top: 0;              /* 全画面配置 */
  width: 100%;         /* 全画面配置 */
  height: 100%;        /* 全画面配置 */
  overflow: auto;      /* 画面が小さいときにスクロール */
  background-color: rgba(0,0,0,0.4); /* 半透明背景 */
}

.modalContent {
  background-color: #fff; /* 背景色 */
  margin: 10% auto;         /* 外側の余白 周りに10%の余白を作り中央に配置 */
  padding: 20px;            /* 内側の余白 */
  border: 1px solid #888; /* 枠線の書式設定(大きさ、タイプ、色)*/
  border-radius: 10px;      /* 角を丸くする */
  width: 100%;              /* 横幅いっぱいに表示 */
  max-width: 500px;         /* 最大横幅を制限 */
  box-shadow: 0 0 10px rgba(0,0,0,0.3);  /* ほんのり影で立体感 */
  position: relative;       /* 右上閉じるボタンの基準位置を指定 */
}

.close {
  position: absolute; /* 基準値から自由に配置(modalContentに基準設定) */
  top: 10px;          /* 配置 上から10px */
  right: 15px;        /* 配置 右から15px */
  font-size: 1.5em;   /* 文字サイズ */
  font-weight: bold;  /* 太文字 */
  color: #aaa;      /* 文字色 */
  cursor: pointer;    /* カーソルをポインタに */
}

.close:hover {
  color: #000;     /* ホバー時の文字色 */
}

/* ----------------------------
  レスポンシブ対応：スマホ時の調整
----------------------------- */
@media (max-width: 600px) {
  html{
    padding: 0;    /* 内側の余白：(上 | 右 | 下 | 左) */
  }

  body {
    font-size: 90%;
    padding: 0em 0.4em 1.5em 0.4em;  /* 余白をぐっと減らす (上 | 右 | 下 | 左)*/
  }

  /* padding が width に含まれるようになるため、要素が画面幅をはみ出しにくく */
  * {
    box-sizing: border-box;
  }

  /* タイトル文字を縮小して横幅を確保 */
  #mainHeader #logoArea {
    font-size: 1.3em; 
  }

  /* ボタンの表示幅に合わせ横幅変更 */
  #authStatus {
    max-width: 100px;
  }

  button {
    font-size: 1em;
    padding: 0.5em 1em;
  }

  /* 活動名登録テキストボックス */
  #newActivity{
    width: 98%;  /* 横幅いっぱい※margin分ずれるため100にしない */
  }
  /* 昇順降順プルダウン */
  #recordOrder {
  /*  height: 2.6em; /* テキストボックスと高さ揃える ??????????????????????????聞くか分からん、safariでは形式が異なる */
  }

  /* タイマー画面を縦表示に */
  .timerColumn,
  .rankColumn {
    min-width: 100%; /* スマホ画面の横幅に自動調整 */
  }
}